<style>
    table {
        color: white;
        width: 100%;
    }
</style>

<div class="table-responsive container p-0 m-0 mx-auto d-flex justify-content-center"
    style="height: 100%; width: 1500px; overflow-y: auto; overflow-x: auto;">
    <table class="table table-striped text-center w-100 p-1 m-1">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">Last Name</th>
                <th scope="col">Email</th>
                <th scope="col">Phone</th>
                <th scope="col">Banned</th>
                <th scope="col">Ban User</th>
                <th scope="col">Delete</th>
            </tr>
        </thead>
        <tbody>
            {{#each users.data}}
            <tr>
                <th scope="row">{{@index}}</th>
                <td>{{this.name}}</td>
                <td>{{this.surname}}</td>
                <td>{{this.email}}</td>
                <td>{{this.phone}}</td>
                <td>{{#if this.isbanned}}Yes{{else}}No{{/if}}</td>
                <td><button class="btn btn-warning" onclick="banUserFunc('{{this._id}}')">Ban</button></td>
                <td><button class="btn btn-danger" onclick="deleteUserFunc('{{this._id}}')">Delete</button></td>
            </tr>
            {{/each}}
        </tbody>
    </table>
</div>

<script>
const deleteUserFunc = async (id) => {
    Swal.fire({ 
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, delete it!"
    }).then(async (result) => {
        if (result.isConfirmed) {
            try {
                const response = await fetch(`http://127.0.0.1:8080/api/v1/users/delete/${id}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    Swal.fire({
                        title: "Deleted!",
                        text: "The user has been deleted.",
                        icon: "success"
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Something went wrong!"
                    });
                }
            } catch (error) {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "Unable to delete the user. Please try again later."
                });
            }
        }
    });
};

const banUserFunc = (id) =>{
    Swal.fire({ 
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, block it!"
    }).then(async (result) => {
        if (result.isConfirmed) {
            try {
                const response = await fetch(`http://127.0.0.1:8080/api/v1/users/ban/${id}`, {
                    method: 'POST'
                });

                if (response.ok) {
                    Swal.fire({
                        title: "Banned!",
                        text: "The user has been banned.",
                        icon: "success"
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Something went wrong!"
                    });
                }
            } catch (error) {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "Unable to delete the user. Please try again later."
                });
            }
        }
    });
};


</script>