<style>
    body {
        background-color: #212529;
        color: white;
    }
</style>

<div class="container-fluid w-75 p-5 d-flex justify-content-center align-items-center" style="height: 90vh;">
    <form class="w-50" id="passwordResetForm" data-token="{{token}}">
        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input type="password" name="password" class="form-control" id="password">
        </div>
        <div class="mb-3">
            <label for="confirm-password" class="form-label">Confirm Password</label>
            <input type="password" name="confirm-password" class="form-control" id="confirm-password">
        </div>
        <button type="submit" class="btn btn-primary w-100">Submit</button>
    </form>
</div>

<script>
    document.getElementById("passwordResetForm").addEventListener("submit", async (event) => {
        event.preventDefault();

        const form = document.getElementById("passwordResetForm");
        const token = form.getAttribute("data-token");
        const password = document.getElementById("password").value;
        const confirmPassword = document.getElementById("confirm-password").value;
        if (password !== confirmPassword) {
            Swal.fire({
                icon: "error",
                title: "Password Error",
                text: "Passwords do not match",
            });
            return;
        }

        try {
            const response = await fetch(`http://127.0.0.1:8080/api/v1/auth/reset-password/${token}`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ password })
            });

            const data = await response.json();
            if (data.message === "success") {
                Swal.fire({
                    icon: "success",
                    title: "Congratulations",
                    text: "Your password has been successfully changed",
                }).then(() => {
                    window.location.href = "http://127.0.0.1:8080/login";
                });
            } else {
                handleErrors(data);
            }
        } catch (error) {
            console.error(error);
            Swal.fire({
                icon: "error",
                title: "Internal Server Error",
            });
        }
    });

    const handleErrors = (data) => {
        if (data.name === "Password no match") {
            Swal.fire({
                icon: "error",
                title: "Password Error",
                text: "Passwords do not match",
            });
        } else if (data.name === "Validation error") {
            Swal.fire({
                icon: "error",
                title: "Password Error",
                text: "Password validation error",
            });
        } else if (data.name === "Conflict Exception") {
            Swal.fire({
                icon: "error",
                title: "Time Error",
                text: "Your reset password link has already expired",
            });
        } else {
            console.log(data);
            Swal.fire({
                icon: "error",
                title: "Internal Server Error",
            });
        }
    }
</script>
